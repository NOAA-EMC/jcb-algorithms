name: Run JCB client testing with client changes

on:
  push:
    branches:
      - develop
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:

  jcb_integration_tests:

    runs-on: ubuntu-latest
    name: JCB Client Integration Tests

    env:
      JCB_REPO: https://github.com/NOAA-EMC/jcb.git
      JCB_ALGO_REPO: https://github.com/NOAA-EMC/jcb-algorithms.git

    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Add repo url to the environment
      run: |
        JCB_APP_REPO="${{ github.repository }}"
        echo "JCB_APP_REPO=${JCB_APP_REPO}" >> $GITHUB_ENV

    - name: Determine the name of the client branch
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
        JCB_APP_BRANCH=${{ github.head_ref }}
        else
          BRANCH_REF=${{ github.ref }}
          JCB_APP_BRANCH=${BRANCH_REF#refs/heads/}
        fi
        echo "JCB_APP_BRANCH=$JCB_APP_BRANCH" >> $GITHUB_ENV

    - name: Check for existence of the branch name in the main jcb repo
      run: |
        BRANCH_NAME=${{ env.JCB_APP_BRANCH }}
        if git ls-remote --heads $JCB_REPO $BRANCH_NAME | grep -q "refs/heads/$BRANCH_NAME"; then

          echo "Branch $BRANCH_NAME exists in jcb repo."

        else

          # If the tested jcb-algorithms branch does not exist in the main jcb repo then we need to
          # throw an error. This is not a safe situation. The developer should create a branch in
          # the main jcb repo with the same name as the branch in the jcb-application repo.
          # If there were branches in other apps to account for the changes in the algorithm repo
          # they could not be tested here since the scipt is not clever enough to check for
          # the existence of the branch being tested here in all the clients. The safest thing to do
          # is simply create a branch with the same name (even if empty) in the main jcb repo. This
          # will ensure the branches of the other applications are checked out by the init script.

          echo "The $BRANCH_NAME being tested for jcb-algorithms does not exist in the main jcb "
          echo "repo. Please create a branch with the same name in the jcb repo (even if empty). "
          echo "This ensures that where you have made branches with the same name in the clients "
          echo "they will be checked out by the cleint intialization script."
          exit 1

        fi

    - name: Clone jcb repository
      run: |
        mkdir -p empty_hooks
        git config --global core.hooksPath empty_hooks
        git clone --branch ${{ env.JCB_BRANCH }} --recursive $JCB_REPO jcb_repo

    - name: Clone the clients
      run: |
        cd jcb_repo
        pip install pyyaml
        ./jcb_client_init.py

    - name: Install dependencies
      run: |
        cd jcb_repo
        pip install .[testing]

    - name: Run the JCB client integration tests
      run: |
        cd jcb_repo/test/client_integration
        pytest -v
